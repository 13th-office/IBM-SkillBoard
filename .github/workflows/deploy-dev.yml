name: Deploy
on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    uses: ./.github/workflows/test.yml
    secrets: inherit
    with:
      environment: dev
  deploy:
    name: Deploy to VPS
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >> ~/.ssh/config <<END
          Host my-vps
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.DEV_SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.DEV_SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.DEV_SSH_IP }}

      - name: Fetch latest commit
        run: ssh my-vps 'cd ${{ secrets.PROJECT_ROOT }} && git fetch && git reset origin/dev --hard'

      - name: Deploy server
        run: ssh my-vps 'cd ${{ secrets.PROJECT_ROOT }}/backend-dashboard-2/ && ./redeploy.sh'

      - name: Retrieve server status
        run: ssh my-vps 'ps a | grep puma | grep -v grep'

      - name: Deploy client
        run: ssh my-vps 'cd ${{ secrets.PROJECT_ROOT }}/client/ && ./redeploy.sh'

      - name: Retrieve client status
        run: ssh my-vps 'ps a | grep http-server | grep -v grep'

      - name: Send Discord message on success
        if: ${{ success() }}
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš€ Deployment to \`dev\` VPS successful"

      - name: Send Discord message on failure
        if: ${{ failure() }}
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deployment to \`dev\` VPS failed"
